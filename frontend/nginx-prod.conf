server {
    listen 80;  # IPv4
    listen [::]:80; # IPv6

    server_name moducha.site;

	include /etc/nginx/snippets/letsencrypt.conf # .well-know/acme-challenge 폴더 위치 표시

    # 모든 요청을 https로 리다이렉트
    location / {
        return 301 https://$host$request_uri;
    }

    # Disallow all bots
    location /robots.txt {
        return 200 "User-agent: *\nDisallow: /"; # Disallow all bots
    }
}

server {
    listen 443 ssl;
    server_name moducha.site;

    ssl_certificate /etc/letsencrypt/live/moducha.site/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/moducha.site/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/devbono.com/fullchain.pem;
    include /etc/nginx/snippets/ssl.conf; ### SSL 보안설정 ssl.conf 파일 위치

    location / {
        root /app/build;
        index index.html;
    }

    location /api/v1/ {
        # docker network 내부에서 통신
        proxy_pass Http://backend:8080/;
        # proxy 요청에 원래 호스트 헤더를 설정
        proxy_set_header Host $host;
        # 클라이언트의 실제 IP를 X-Real-IP 헤더에 설정. 백엔드 서버가 실제 클라이언트의 IP를 알기 위함. -> 로깅, IP 제한, 지리적 위치 서비스 등에 사용.
        proxy_set_header X-Real-IP $remote_addr;
        # X-Forwarded-For 클라이언트의 IP와 경유한 프록시 서버의 IP 목록을 전달. 백엔드 서버가 전체 경로를 추적할 수 있게 함.
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        # 프로토콜을 X-Forwarded-Proto 헤더에 설정. 이유는 프로토콜이 http인지 https인지 알기 위함 -> 보안 분석, 트래픽 분석 등에 사용.
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Disallow all bots
    location /robots.txt {
        return 200 "User-agent: *\nDisallow: /";
    }
}
